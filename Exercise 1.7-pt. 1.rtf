{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 The good-enough? test will not work well for finding the square root of very small numbers. Why? Because it tests to see if the difference between the square of the guess and the radicand is less than 0.001. If you are trying to find the square root of 0.0001, which is approximately, 0.00316, the answer the procedure gives is approximately 0.03, which is off by an order of magnitude. The square root of 0.000001 is 0.001, but the procedure gives the same answer. This is because 0.03^2 is 0.0009 and the difference between 0.0009 and 0.00001 is 0.00089 which is less than 0.001. As the radicand gets smaller, the procedure will have the same return value because the values it is working with are so small that the differences do not meet the threshold of the good-enough? test.\
\
In real computers arithmetic is performed with limited precision which makes the test inadequate with very large numbers. The square root of 1.0 x 10^15 is approximately 31,622,776, but the procedure cannot find this number. This is probably because it cannot get the difference low enough to pass the test, since it cannot store enough precision.}